{"version":3,"file":"static/js/336.805bf9cf.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contacts/selectors.js","webpack://phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import React, { useState } from 'react';\n\nimport { FcAddDatabase } from 'react-icons/fc';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      number: '',\n    });\n  };\n\n  const contacts = useSelector(state => state.contacts.data);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n    const existingContact = contacts.find(\n      existingContact =>\n        existingContact.name.toLowerCase() === nameValue.toLowerCase()\n    );\n\n    if (existingContact) {\n      alert(`${nameValue} is already in contacts`);\n    } else {\n      dispatch(addContact({ name: nameValue, number: numberValue }));\n      reset();\n    }\n  };\n\n  return (\n    <form\n      className={css.form}\n      name=\"contact_form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={formData.name}\n          name=\"name\"\n          placeholder=\"Enter contact name\"\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Z\\s]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={formData.number}\n          placeholder=\"Enter contact number\"\n          onChange={handleInputChange}\n          pattern=\"^[0-9]+$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n        <FcAddDatabase style={{ width: '24px', height: '24px' }} />\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport css from 'components/Filter/Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nconst Filter = ({ onChange }) => {\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        type=\" text\"\n        className={css.input}\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.any,\n};\nexport default Filter;\n","export const getContacts = state => state.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contact_text__Wq-3f\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { FcDeleteDatabase } from 'react-icons/fc';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <p className={css.text}>\n        {contact.name}: {contact.number}\n      </p>\n      <button className={css.button} onClick={handleDelete}>\n        Delete\n        <FcDeleteDatabase style={{ width: '24px', height: '24px' }} />\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport css from 'components/ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Filter from '../Filter/Filter';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { ProgressBar } from 'react-loader-spinner';\n\nimport { Contact } from 'components/Contact/Contact';\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.data);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const handleFilterChange = event => {\n    dispatch(filterContacts(event.currentTarget.value));\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      {contacts.length > 0 && <Filter onChange={handleFilterChange} />}\n      {isLoading && !error && <ProgressBar />}\n      <ul className={css.list}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={css.item}>\n            <Contact contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.any,\n};\nexport default ContactList;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport image from '../image/sea.jpg';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover',\n        width: '560px',\n        height: 'auto',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n        flexDirection: 'column',\n        borderRadius: '8px',\n      }}\n    >\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["useState","name","number","formData","setFormData","handleInputChange","event","currentTarget","value","prevFormData","contacts","useSelector","state","data","dispatch","useDispatch","className","css","onSubmit","preventDefault","form","target","nameValue","elements","numberValue","find","existingContact","toLowerCase","alert","addContact","autoComplete","type","placeholder","onChange","pattern","title","required","style","width","height","filter","getIsLoading","isLoading","getError","error","Contact","contact","onClick","deleteContact","id","normalizedFilter","filteredContacts","includes","length","filterContacts","map","Contacts","useEffect","fetchContacts","backgroundImage","image","backgroundSize","margin","display","justifyContent","alignItems","fontSize","color","flexDirection","borderRadius","Helmet"],"sourceRoot":""}